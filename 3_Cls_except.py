# Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
# скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
# соответствующее сообщение. При этом работа скрипта не должна завершаться.


class OwnError(Exception):
    def __init__(self, txt):
        self.txt = txt


class MyInput():
    def __init__(self):
        self.my_input()

    @staticmethod
    def my_input():
        print('Вводите числа через пробел, чтобы завершить - введите stop ')
        user_sum = []
        next_do = True
        while next_do:
            try:
                user_string = input().split()
                for el in user_string:
                    if el == 'stop':
                        print('Программа завершена')
                        next_do = False
                        break
                    elif el.isdigit():
                        user_sum.append(int(el))
                    else:
                        raise OwnError('Вводите числа!')
                print(user_sum)
            except OwnError as my_error:
                print(my_error)
                continue


new_obj = MyInput()

